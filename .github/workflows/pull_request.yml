
name: Tests

# Controls when the action will run.
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - "2.9"
          - "2.10"
          - "2.12"
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so it's accessible to the job
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [[ "${{ matrix.ansible }}" = "2.9" ]]; then
              ansible_package=ansible
          elif [[ "${{ matrix.ansible }}" = "2.10" ]]; then
              ansible_package=ansible-base
          else
              ansible_package=ansible-core
          fi
          pip install $ansible_package==${{ matrix.ansible }}.* 'ansible-lint==5.*'

      - name: Linting code
        run: |
          ansible-lint -v --force-color

  integration:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - "2.9"
          - "2.10"
          - "2.12"
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so it's accessible to the job
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [[ "${{ matrix.ansible }}" = "2.9" ]]; then
              ansible_package=ansible
          elif [[ "${{ matrix.ansible }}" = "2.10" ]]; then
              ansible_package=ansible-base
          else
              ansible_package=ansible-core
          fi
          python3 -m pip install $ansible_package==${{ matrix.ansible }}.* docker
          ansible-galaxy collection build
          ansible-galaxy collection install *.tar.gz

      # TODO: Use ansible-test to run these.
      - name: Running integration tests
        run: |
          ansible-playbook -i tests/inventory -v tests/*.yml -e ansible_python_interpreter=$(which python3)
