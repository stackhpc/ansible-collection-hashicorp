---
- name: "Ensure Vault Intermediate PKI backend exists"
  hashivault_secret_engine:
    url: "{{ vault_api_addr }}"
    token: "{{ vault_token }}"
    name: "{{ vault_pki_intermediate_ca_name }}"
    description: "{{ vault_pki_intermediate_ca_name }} CA"
    backend: "pki"

- name: "Generate Intermediate CA cert, key and sign CSR"
  block:
    - name: "Generate Vault Intermediate CA cert and key"
      hashivault_pki_ca:
        url: "{{ vault_api_addr }}"
        token: "{{ vault_token }}"
        mount_point: "{{ vault_pki_intermediate_ca_name }}"
        type: "{{ vault_pki_intermediate_ca_type }}"
        common_name: "{{ vault_pki_intermediate_ca_common_name }}"
        kind: "intermediate"
        config:
          key_bits: 4096
          max_lease_ttl: "43830h"
      register: intermediate_ca_csr

    - name: "Sign Intermediate CSR"
      hashivault_pki_cert_sign:
        url: "{{ vault_api_addr }}"
        token: "{{ vault_token }}"
        mount_point: "{{ vault_pki_root_ca_name }}"
        csr: "{{ intermediate_ca_csr.data.csr }}"
        common_name: "{{ vault_pki_intermediate_ca_common_name }}"
        type: intermediate
      register: intermediate_ca_csr_signed

    - name: "Set Intermediate as signed"
      hashivault_pki_set_signed:
        url: "{{ vault_api_addr }}"
        token: "{{ vault_token }}"
        mount_point: "{{ vault_pki_intermediate_ca_name }}"
        certificate: "{{ intermediate_ca_csr_signed.data.certificate }}\n{{ intermediate_ca_csr_signed.data.issuing_ca }}"

  when: not vault_pki_intermediate_import | bool

- name: "Import Intermediate CA cert and key"
  block:
    - name: "Import Intermediate CA cert and key"
      hashivault_pki_ca_set:
        url: "{{ vault_api_addr }}"
        token: "{{ vault_token }}"
        mount_point: "{{ vault_pki_intermediate_ca_name }}"
        pem_bundle: "{{ vault_pki_intermediate_ca_bundle }}"
 
  when: vault_pki_intermediate_import | bool
