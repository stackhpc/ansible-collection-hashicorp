---
- name: Fail when vault_unseal_keys are empty
  fail:
    msg: "vault_unseal_keys are empty"
  when: not (vault_unseal_keys | length > 0)

- name: Unseal Vault
  hashivault_unseal:
    authtype: "{{ vault_unseal_authtype | default(omit) }}"
    aws_header: "{{ vault_unseal_aws_header | default(omit) }}"
    ca_cert: "{{ vault_unseal_ca_cert | default(omit) }}"
    ca_path: "{{ vault_unseal_ca_path | default(omit) }}"
    client_cert: "{{ vault_unseal_client_cert | default(omit) }}"
    client_key: "{{ vault_unseal_client_key | default(omit) }}"
    keys: "{{ vault_unseal_keys | join(' ') }}"
    login_mount_point: "{{ vault_unseal_login_mount_point | default(omit) }}"
    namespace: "{{ vault_unseal_namespace | default(omit) }}"
    password: "{{ vault_unseal_password | default(omit) }}"
    token: "{{ vault_unseal_token | default(omit) }}"
    url: "{{ vault_api_addr }}"
    username: "{{ vault_unseal_username | default(omit) }}"
    verify: "{{ vault_unseal_verify | default(omit) }}"

- name: Check if vault is sealed
  uri:
    url: "{{ vault_api_addr }}/v1/sys/seal-status"
    validate_certs: "{{ vault_unseal_verify | default(omit) }}"
  register: vault_seal_status

- name: Fail when vault is still sealed
  assert:
    that: not vault_seal_status.json.sealed
    fail_msg: "Vault is sealed - something went wrong"
