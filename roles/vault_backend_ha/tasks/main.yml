- name: "Copy Issuing bundle"
  copy:
    src: "/tmp/issuing-bundle.pem"
    dest: "~/issuing-bundle.pem"
    mode: '0400'
  become: true

- name: "get root token"
  slurp:
    src: "~/vault-keys.txt"
  become: true
  register: vault_keys_output

- name: "set vault keys"
  set_fact:
    vault_keys: "{{ vault_keys_output['content'] | b64decode }}"

- name: "Check vault initalised"
  command: "docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }} vault status -format json"
  become: true
  register: vault_status_output
  changed_when: false
  failed_when: "vault_status_output.rc not in [ 0, 2 ]"

- name: "Set status"
  set_fact:
    vault_status: "{{ vault_status_output.stdout | from_json }}"

- name: "initialise vault"
  command: "docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }} vault operator init -format yaml"
  become: true
  run_once: true
  register: vault_init_output
  when: not vault_status.initialized

- name: "unseal vault"
  command: >-
    docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
    vault operator unseal {{ vault_keys.unseal_keys_b64[item] }}
  run_once: true
  when: vault_status.sealed
  become: true
  with_items:
    - 0
    - 1
    - 2

- name: "vault login"
  command: >-
    docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
    vault login {{ vault_keys.root_token }}
  changed_when: false
  run_once: true
  become: true

- name: "Check Vault Issuing backend exists"
  command: >-
    docker exec  -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
    vault read {{ vault_intermediate_ca_name }}/cert/ca
  run_once: true
  register: issuing_backend_exists
  changed_when: false
  failed_when: "issuing_backend_exists.rc not in [ 0, 2 ]"

- name: "Issuing CA Backend"
  block:
    - name: "Enable PKI Intermediate Backend"
      run_once: true
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault secrets enable -path={{ vault_intermediate_ca_name }}
        -description=\"{{ vault_intermediate_ca_name }} CA v1\" pki
      changed_when: false

    - name: "Tune Issuing Backend"
      run_once: true
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault secrets tune -max-lease-ttl=43830h {{ vault_intermediate_ca_name }}
      changed_when: false

    - name: "Copy Issuing pem bundle"
      run_once: true
      command: docker cp ~/issuing-bundle.pem {{ vault_docker_name }}:/
      changed_when: false
      become: true

    - name: "Upload Issuing pem bundle"
      run_once: true
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault write {{ vault_intermediate_ca_name }}/config/ca pem_bundle=@/issuing-bundle.pem
        -format=json
      changed_when: false

    - name: "Create ServerRole"
      run_once: true
      command: >-
        docker exec -e "VAULT_ADDR={{ vault_api_addr }}" {{ vault_docker_name }}
        vault write {{ vault_intermediate_ca_name }}/roles/ServerCert max_ttl=8760h
        ttl=8760h allow_localhost=trueallow_any_name=trueallow_ip_sans=trueserver_flag=true
        key_type=rsa key_bits=4096 enforce_hostnames=false
      changed_when: false
  when: issuing_backend_exists.rc == 2
