- name: "vault login"
  command: >-
    docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
    vault login {{ vault_token }}
  changed_when: false
  become: true

- name: "Check Vault Root backend exists"
  command: >-
    docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
    vault read {{ vault_root_ca_name }}/cert/ca
  register: root_backend_exists
  failed_when: "root_backend_exists.rc not in [ 0, 2 ]"
  changed_when: false


- name: "Check Vault Issuing backend exists"
  command: >-
    docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
    vault read {{ vault_intermediate_ca_name }}/cert/ca
  register: issuing_backend_exists
  failed_when: "issuing_backend_exists.rc not in [ 0, 2 ]"
  changed_when: false

- name: "RootCA Backend"
  block:
    - name: "Enable PKI Root Backend"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault secrets enable -path={{ vault_root_ca_name }}
        -description='{{ vault_root_ca_name }} CA v1' pki
      changed_when: false

    # 10 years
    - name: "Tune Root Backend"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault secrets tune -max-lease-ttl=87660h {{ vault_root_ca_name }}
      changed_when: false

    - name: "Generate Cert and Priv Key"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault write {{ vault_root_ca_name }}/root/generate/internal
        common_name='{{ vault_root_ca_name }} CA v1'
        ttl=87660h key_bits=4096
      changed_when: false
  when: root_backend_exists.rc == 2

- name: "Issuing CA Backend"
  block:
    - name: "Enable PKI Intermediate Backend"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault secrets enable -path={{ vault_intermediate_ca_name }}
        -description='{{ vault_intermediate_ca_name }} CA v1' pki
      changed_when: false

    # 5 years
    - name: "Tune Issuing Backend"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault secrets tune -max-lease-ttl=43830h {{ vault_intermediate_ca_name }}
      changed_when: false


    - name: "Generate Issuing CSR "
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault write {{ vault_intermediate_ca_name }}/intermediate/generate/exported
        common_name='{{ vault_intermediate_ca_name }} CA v1'
        key_bits=4096 ttl=43830h -format=json
      changed_when: false
      register: issuing_ca_csr_output

    - name: "Set exported Intermediate"
      set_fact:
        issuing_ca_csr: "{{ issuing_ca_csr_output.stdout | from_json }}"

    - name: "Create CSR for export"
      copy:
        dest: /tmp/issuing.csr
        content: "{{ issuing_ca_csr.data.csr }}"
        mode: '0400'
      delegate_to: localhost

    - name: "Create private key for export"
      copy:
        dest: /tmp/issuing.key
        content: "{{ issuing_ca_csr.data.private_key }}"
        mode: '0400'
      delegate_to: localhost

    - name: "Create CSR"
      copy:
        dest: /tmp/issuing.csr
        content: "{{ issuing_ca_csr.data.csr }}"
        mode: '0400'

    - name: "Copy CSR"
      command: docker cp /tmp/issuing.csr {{ vault_docker_name }}:/
      changed_when: false
      become: true

    - name: "Delete CSR"
      file:
        path: /tmp/issuing.csr
        state: absent

    - name: "Sign Issuing CSR"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault write {{ vault_root_ca_name }}/root/sign-intermediate csr=@/issuing.csr
        format=pem_bundle ttl=43830h -format=json
      changed_when: false
      register: issuing_ca_crt_output

    - name: "Delete CSR in container"
      command: >-
        docker exec {{ vault_docker_name }}
        rm -f /issuing.csr
      changed_when: false
      become: true

    - name: "Set CSR"
      set_fact:
        issuing_ca_crt: "{{ issuing_ca_crt_output.stdout | from_json }}"

    - name: "Create intermediate pem bundle"
      copy:
        dest: /tmp/issuing-bundle.pem
        content: |
          {{ issuing_ca_crt.data.certificate }}
          {{ issuing_ca_crt.data.issuing_ca }}
          {{ issuing_ca_csr.data.private_key }}
        mode: '0400'


    - name: "Create intermediate pem bundle for export"
      copy:
        dest: /tmp/issuing-bundle.pem
        content: |
          {{ issuing_ca_crt.data.certificate }}
          {{ issuing_ca_crt.data.issuing_ca }}
          {{ issuing_ca_csr.data.private_key }}
        mode: '0400'
      delegate_to: localhost

    - name: "Create RootCA for export"
      copy:
        dest: /tmp/rootCA.crt
        content: |
          {{ issuing_ca_crt.data.issuing_ca }}
        mode: '0400'
      delegate_to: localhost

    - name: "Copy Issuing Bundle"
      command: docker cp /tmp/issuing-bundle.pem vault:/
      changed_when: false
      become: true

    - name: "Delete Issuing Bundle"
      file:
        path: /tmp/issuing-bundle.pem
        state: absent

    - name: "Set Issuing CRT"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault write {{ vault_intermediate_ca_name }}/issuers/import/bundle pem_bundle=@/issuing-bundle.pem
        format=pem_bundle ttl=43830h
      changed_when: false

    - name: "Delete Issuing Bundle in container"
      command: >-
        docker exec {{ vault_docker_name }}
        rm -f /issuing-bundle.pem
      changed_when: false
      become: true

    # Max 1 year
    - name: "Create ServerCert role"
      command: >-
        docker exec -e 'VAULT_ADDR={{ vault_api_addr }}' {{ vault_docker_name }}
        vault write {{ vault_intermediate_ca_name }}/roles/ServerCert
        max_ttl=8760h ttl=8760h
        allow_ip_sans=true require_cn=false server_flag=true
        key_type=rsa key_bits=4096
        country='NL' locality='Groningen' organization='RUG' ou='HPC'
      changed_when: false
  when: issuing_backend_exists.rc == 2

- name: "vault logout"
  command: >-
    docker exec {{ vault_docker_name }}
    rm -f ~/.vault-token
  changed_when: false
  become: true
